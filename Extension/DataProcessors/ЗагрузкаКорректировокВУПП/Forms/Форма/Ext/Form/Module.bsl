&НаСервере
Функция ПодключитьсяКВэбСервисуУПП()

	Сервер = "http://172.17.244.7/1csc/ws/esdws.1cws?wsdl";  //рабочая база
	//Сервер = "http://sv08/DEV03/ws/esdws.1cws?wsdl";
	Пользователь = "ESD";
	Пароль = "webs2689";
	
	Определение = Новый WSОпределения(Сервер, Пользователь, Пароль);
	
	WSПрокси = Новый WSПрокси(Определение, "www.softclub.ru", "ESD", "ESDSoap");
	WSПрокси.Пользователь = Пользователь;
	WSПрокси.Пароль = Пароль;	
	
	//WSПрокси = WSСсылки.SC_ESD.СоздатьWSПрокси("www.softclub.ru", "ESD", "ESDSoap");
	//WSПрокси.Пользователь = "ESD";
	//WSПрокси.Пароль = "webs2689";
	
	Возврат WSПрокси;
	
КонецФункции

&НаСервере
Функция ПолучитьОбъектИзДругойБазы(ВэбСервис, ДанныеСтруктура)

	ДанныеСтрока = ЗначениеВСтрокуВнутр(ДанныеСтруктура);
	РезультатСтрока = ВэбСервис.GetObject(ДанныеСтрока);
	Результат = ЗначениеИзСтрокиВнутр(РезультатСтрока);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура Выгрузить(Команда)
	ВыгрузитьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьНаСервере()
	
	WSПрокси = ПодключитьсяКВэбСервисуУПП();
	
	
	////////// корректировка реализаций
		
	Если Продажи Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Продажи.Date КАК Date,
			|	Продажи.AgreementScId КАК AgreementScId,
			|	Продажи.NomenclatureScId КАК NomenclatureScId,
			|	КОЛИЧЕСТВО(Продажи.ServerTxId) КАК QT,
			//|	СУММА(Продажи.Price) КАК РРЦ,
			//|	СУММА(ЕСТЬNULL(Корректировки.Price, Продажи.Price)) КАК ЦенаМВ,
			|	СУММА(ВЫБОР
			|		КОГДА ЕСТЬNULL(Корректировки.Price, Продажи.Price) < Продажи.Price
			|			ТОГДА Продажи.Price
			|			ИНАЧЕ ЕСТЬNULL(Корректировки.Price, Продажи.Price)
			|		КОНЕЦ) КАК Summa
			|ИЗ
			|	РегистрСведений.ТранзакцииESD КАК Продажи
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КорректировкиESD КАК Корректировки
			|		ПО (Продажи.ServerTxId = Корректировки.ServerTxId)
			|ГДЕ
			|	Продажи.TxRef = 0
			|	И Продажи.Date МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И (НЕ Корректировки.Обработано
			|			ИЛИ Корректировки.Price ЕСТЬ NULL)
			|
			|	И (Продажи.AgreementScId = ""с00008488""
			|			ИЛИ Продажи.AgreementScId = ""с00008490"")
			//|	И (Продажи.AgreementScId = ""с00008490"")
			|
			|
			|СГРУППИРОВАТЬ ПО
			|	Продажи.Date,
			|	Продажи.AgreementScId,
			|	Продажи.NomenclatureScId
			|
			|УПОРЯДОЧИТЬ ПО
			|	Date
			//|	AgreementScId,
			//|	NomenclatureScId
			|ИТОГИ ПО
			|	Date,
			|	AgreementScId
			|";
		Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДата = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДата.Следующий() Цикл
			ВыборкаАккаунт = ВыборкаДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаАккаунт.Следующий() Цикл
				TableNomenclatures = WSПрокси.ФабрикаXDTO.Создать(WSПрокси.ФабрикаXDTO.Тип("ESD", "TableNomenclatures"));
				ВыборкаНоменклатура = ВыборкаАккаунт.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаНоменклатура.Следующий() Цикл
					ElementNomenclature = WSПрокси.ФабрикаXDTO.Создать(WSПрокси.ФабрикаXDTO.Тип("ESD", "ElementNomenclature"));
					ElementNomenclature.Art = ВыборкаНоменклатура.NomenclatureScId;
					ElementNomenclature.QT = ВыборкаНоменклатура.QT;
					ElementNomenclature.Date = Дата(1,1,1);
					ElementNomenclature.Summa = ВыборкаНоменклатура.Summa;
					TableNomenclatures.Nomenclatures.Добавить(ElementNomenclature);
				КонецЦикла;
				
				Результат = WSПрокси.LoadSaleAdjustments(ВыборкаДата.Date, ВыборкаАккаунт.AgreementScId, TableNomenclatures);
				
				Если Результат.Success Тогда
					Сообщить(Результат.Comments);
				Иначе
					Сообщить("Ошибка выгрузки корректировки реализации. " + ВыборкаДата.Date + " Аккаунт " + ВыборкаАккаунт.AgreementScId + "  Причина: " + Результат.Comments);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
		
	
	////////// корректировка возвратов
	
	Если Возвраты Тогда
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Возвраты.Date КАК Date,
			|	Возвраты.AgreementScId КАК AgreementScId,
			|	Возвраты.NomenclatureScId КАК NomenclatureScId,
			|	Продажи.Date КАК SaleDate,
			|	КОЛИЧЕСТВО(Возвраты.ServerTxId) КАК Qt,
			//|	СУММА(Возвраты.Price) КАК РРЦ,
			//|	СУММА(ЕСТЬNULL(Корректировки.Price, Возвраты.Price)) КАК ЦенаМВ,
			|	СУММА(ВЫБОР
			|		КОГДА ЕСТЬNULL(Корректировки.Price, Возвраты.Price) < Возвраты.Price
			|			ТОГДА Возвраты.Price
			|		ИНАЧЕ ЕСТЬNULL(Корректировки.Price, Возвраты.Price)
			|	КОНЕЦ) КАК Summa
			|ИЗ
			|	РегистрСведений.ТранзакцииESD КАК Возвраты
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТранзакцииESD КАК Продажи
			|		ПО Возвраты.TxRef = Продажи.ServerTxId
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КорректировкиESD КАК Корректировки
			|		ПО Продажи.ServerTxId = Корректировки.ServerTxId
			|
			|ГДЕ
			|	НЕ Возвраты.TxRef = 0
			|	И Возвраты.Date МЕЖДУ &ДатаНачала И &ДатаОкончания
			|	И (Возвраты.AgreementScId = ""с00008488""
			|			ИЛИ Возвраты.AgreementScId = ""с00008490"")
			|
			|СГРУППИРОВАТЬ ПО
			|	Возвраты.Date,
			|	Возвраты.AgreementScId,
			|	Возвраты.NomenclatureScId,
			|	Продажи.Date
			|
			|УПОРЯДОЧИТЬ ПО
			|	Date,
			|	AgreementScId,
			|	NomenclatureScId
			|ИТОГИ ПО
			|	Date,
			|	AgreementScId		
			|";
			
		Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
		Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДата = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаДата.Следующий() Цикл
			ВыборкаАккаунт = ВыборкаДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаАккаунт.Следующий() Цикл
				TableNomenclatures = WSПрокси.ФабрикаXDTO.Создать(WSПрокси.ФабрикаXDTO.Тип("ESD", "TableNomenclatures"));
				ВыборкаНоменклатура = ВыборкаАккаунт.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаНоменклатура.Следующий() Цикл
					ElementNomenclature = WSПрокси.ФабрикаXDTO.Создать(WSПрокси.ФабрикаXDTO.Тип("ESD", "ElementNomenclature"));
					ElementNomenclature.Art = ВыборкаНоменклатура.NomenclatureScId;
					ElementNomenclature.QT = ВыборкаНоменклатура.QT;
					ElementNomenclature.Date = ВыборкаНоменклатура.SaleDate;
					ElementNomenclature.Summa = ВыборкаНоменклатура.Summa;
					TableNomenclatures.Nomenclatures.Добавить(ElementNomenclature);
				КонецЦикла;
				
				Результат = WSПрокси.LoadRefundAdjustments(ВыборкаДата.Date, ВыборкаАккаунт.AgreementScId, TableNomenclatures);
				
				Если Результат.Success Тогда
					Сообщить(Результат.Comments);
				Иначе
					Сообщить("Ошибка выгрузки корректировки возвратов. " + ВыборкаДата.Date + " Аккаунт " + ВыборкаАккаунт.AgreementScId + "  Причина: " + Результат.Comments);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьЦены(Команда)
	ЗагрузкаЦенПоТранзакциям();
КонецПроцедуры

&НаСервере
Процедура ЗагрузкаЦенПоТранзакциям()
	
	WSПрокси = ПодключитьсяКВэбСервисуУПП();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Т.Date КАК Date,
		|	Т.AgreementScId КАК AgreementScId,
		|	Т.NomenclatureScId КАК NomenclatureScId
		|ИЗ
		|	РегистрСведений.ТранзакцииESD КАК Т
		|ГДЕ
		|	НЕ Т.Обработано
		|	И Т.TxRef = 0
//---------------------		
		//|	И Т.Date < &Дата
		|	И Т.Date >= &ДатаНачала
		|	И Т.Date <= &ДатаОкончания
//-------------------------		
		|
		|СГРУППИРОВАТЬ ПО
		|	Т.Date,
		|	Т.AgreementScId,
		|	Т.NomenclatureScId
		|
		|УПОРЯДОЧИТЬ ПО
		|	Т.Date
		|ИТОГИ ПО
		|	Date,
		|	AgreementScId		
		|";	
	
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(ТекущаяДата()));
//------------------	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
//-------------------	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДата = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаДата.Следующий() Цикл
		ВыборкаАккаунт = ВыборкаДата.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаАккаунт.Следующий() Цикл
			TableProduct = WSПрокси.ФабрикаXDTO.Создать(WSПрокси.ФабрикаXDTO.Тип("ESD", "TableProduct"));
			ВыборкаНоменклатура = ВыборкаАккаунт.Выбрать();
			Пока ВыборкаНоменклатура.Следующий() Цикл
				ElementProduct = WSПрокси.ФабрикаXDTO.Создать(WSПрокси.ФабрикаXDTO.Тип("ESD", "ElementProduct"));
				ElementProduct.Art = ВыборкаНоменклатура.NomenclatureScId;
				TableProduct.Element.Добавить(ElementProduct);
			КонецЦикла;
			
			Результат = WSПрокси.GetPriceNew(ВыборкаДата.Date, ВыборкаАккаунт.AgreementScId, TableProduct, "");
			
			Если НЕ Результат.Success Тогда
				Сообщить("Ошибка загрузки цены. " + ВыборкаДата.Date + " Аккаунт " + ВыборкаАккаунт.AgreementScId + "  Причина: " + Результат.Comments);
			КонецЕсли;
			
			Для Каждого Строка Из Результат.TablePrice.Element Цикл
				
				НаборЗаписей = РегистрыСведений.ТранзакцииESD.СоздатьНаборЗаписей();
				НаборЗаписей.Отбор.Date.Установить(Строка.Date);
				НаборЗаписей.Отбор.AgreementScId.Установить(Строка.Rtl);
				НаборЗаписей.Отбор.NomenclatureScId.Установить(Строка.Art);
				НаборЗаписей.Отбор.TxRef.Установить(0);
				НаборЗаписей.Прочитать();
				
				Для Каждого Запись Из НаборЗаписей Цикл 
					Запись.Price = Строка.Price;
					Запись.Обработано = Истина;
				КонецЦикла;
				
				НаборЗаписей.Записать();
			КонецЦикла;
		КонецЦикла;
		Сообщить("" + ВыборкаДата.Date + " ОК.");
	КонецЦикла;
	
	
	////////////////////////////////////////////////////////////////////////////////////////////
	//Обработка возвратов
	///////////////////////////////////////////////////////////////////////////////////////////
	
	КоличествоЗаписейВТранзакции = 100;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	//|	Возвраты.Date КАК ДатаВозврата, 
	//|	Продажи.Date КАК ДатаПродажи,
	//|	Возвраты.AgreementScId КАК AgreementScId,
	//|	Возвраты.NomenclatureScId КАК NomenclatureScId,
	|	Возвраты.ServerTxId КАК ServerTxId,
	//|	Возвраты.TxRef КАК TxRef,
	|	ЕСТЬNULL(Продажи.Price, 0) КАК Price
	//|	Возвраты.Price КАК ЦенаВозврата,
	//|	Продажи.Обработано КАК Обработано
	|ИЗ
	|	РегистрСведений.ТранзакцииESD КАК Возвраты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТранзакцииESD КАК Продажи
	|		ПО Возвраты.TxRef = Продажи.ServerTxId
	|ГДЕ
	|	НЕ Возвраты.TxRef = 0
	|	И НЕ Возвраты.Обработано
	|	И Продажи.Обработано
//---------------------		
	//|	И Возвраты.Date < &Дата
	|	И Возвраты.Date >= &ДатаНачала
	|	И Возвраты.Date <= &ДатаОкончания
//-------------------------		
	|
	|УПОРЯДОЧИТЬ ПО
	|	Возвраты.Date";
	
	Запрос.УстановитьПараметр("Дата", НачалоМесяца(ТекущаяДата()));
//------------------	
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
//-------------------	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	НачатьТранзакцию();
	НомерЗаписи = 0;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		НомерЗаписи = НомерЗаписи + 1;
		Если НомерЗаписи >= КоличествоЗаписейВТранзакции Тогда
			ЗафиксироватьТранзакцию();
			НомерЗаписи = 0;
			НачатьТранзакцию();
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.ТранзакцииESD.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ServerTxId.Установить(ВыборкаДетальныеЗаписи.ServerTxId);
		НаборЗаписей.Прочитать();
		
		НаборЗаписей[0].Price = ВыборкаДетальныеЗаписи.Price;
		НаборЗаписей[0].Обработано = Истина;
		
		НаборЗаписей.Записать();
		
	КонецЦикла;
		
	Если ТранзакцияАктивна() Тогда
		ЗафиксироватьТранзакцию();
	КонецЕсли;
	
	Сообщить("Цены возвратов ОК.");
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьНовыеЭлементы(Команда)
	СоздатьНовыеЭлементыНаСервере();
КонецПроцедуры

&НаСервере
Процедура СоздатьНовыеЭлементыНаСервере()

	//Сервер = "http://sv08/DEV03/ws/esdws.1cws?wsdl";
	//Пользователь = "ESD";
	//Пароль = "webs2689";
	//Определение = Новый WSОпределения(Сервер, Пользователь, Пароль);
	//WSПрокси = Новый WSПрокси(Определение, "www.softclub.ru", "ESD", "ESDSoap");
	//WSПрокси.Пользователь = Пользователь;
	//WSПрокси.Пароль = Пароль;	
	
	WSПрокси = ПодключитьсяКВэбСервисуУПП();
	
	
	

	//// Номенклатура
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.NomenclatureScId КАК NomenclatureScId,
		|	Т.Manufacture КАК Manufacture
		|ИЗ
		|	РегистрСведений.ТранзакцииESD КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО Т.NomenclatureScId = Номенклатура.Артикул
		|ГДЕ
		|	Номенклатура.Ссылка ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если СоздатьНоменклатуру(WSПрокси, ВыборкаДетальныеЗаписи.NomenclatureScId, ВыборкаДетальныеЗаписи.Manufacture) Тогда
		Иначе
			ЗаписьЖурналаРегистрации("Обработка транзакций ESD. Ошибка идентификации/создания объекта",
				УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецЕсли;
	КонецЦикла;
	//////

	
	//// Комплектующие
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	С.SerialSetScId КАК SerialSetScId
		|ИЗ
		|	РегистрСведений.СерииESD КАК С
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
		|		ПО С.SerialSetScId = Номенклатура.Артикул
		|ГДЕ
		|	НЕ С.SerialSetScId = ""123"" И
		|	Номенклатура.Ссылка ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если ВыборкаДетальныеЗаписи.SerialSetScId = "123" Тогда
			Продолжить;
		КонецЕсли;
		Если СоздатьНоменклатуру(WSПрокси, ВыборкаДетальныеЗаписи.SerialSetScId) Тогда
		Иначе
			ЗаписьЖурналаРегистрации("Обработка транзакций ESD. Ошибка идентификации/создания объекта",
				УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецЕсли;
	КонецЦикла;
	//////

	
	//// Аккаунты
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.AgreementScId КАК AgreementScId
		|ИЗ
		|	РегистрСведений.ТранзакцииESD КАК Т
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СоглашенияСКлиентами КАК Соглашения
		|		ПО Т.AgreementScId = Соглашения.Номер
		|ГДЕ
		|	Соглашения.Ссылка ЕСТЬ NULL";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если СоздатьСоглашение(WSПрокси, ВыборкаДетальныеЗаписи.AgreementScId) Тогда
		Иначе
			ЗаписьЖурналаРегистрации("Обработка транзакций ESD. Ошибка идентификации/создания объекта",
				УровеньЖурналаРегистрации.Ошибка,,, ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		КонецЕсли;
	КонецЦикла;
	//////

	
КонецПроцедуры

Функция СоздатьНоменклатуру(ВэбСервис, Артикул, ЭтоНабор = Ложь)
	
	Попытка
		
		ДанныеСтруктура = Новый Структура("Тип,ПолеПоиска,Значение", "Справочник.Номенклатура", "Артикул", Артикул);
		Данные = ПолучитьОбъектИзДругойБазы(ВэбСервис, ДанныеСтруктура);
		
		Если НЕ Данные.Успех Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Номенклатура = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные["Ссылка"]));
		
		НоменклатураОбъект = Справочники.Номенклатура.СоздатьЭлемент();
		НоменклатураОбъект.УстановитьСсылкуНового(Номенклатура);
		
		ЗаполнитьЗначенияСвойств(НоменклатураОбъект, Данные, "Код,Наименование,Артикул,НаименованиеПолное");
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	УпаковкиЕдиницыИзмерения.Ссылка КАК Ссылка
			|ИЗ
			|	Справочник.УпаковкиЕдиницыИзмерения КАК УпаковкиЕдиницыИзмерения
			|ГДЕ
			|	УпаковкиЕдиницыИзмерения.Код = &Код
			|	И УпаковкиЕдиницыИзмерения.Владелец = ЗНАЧЕНИЕ(Справочник.НаборыУпаковок.БазовыеЕдиницыИзмерения)";
		Запрос.УстановитьПараметр("Код", Данные["БазоваяЕдиницаИзмеренияКод"]);
		ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
			ЕдиницаИзмерения = ВыборкаДетальныеЗаписи.Ссылка;
		Иначе
			ЕдиницаИзмерения = Константы.ЕдиницаИзмеренияКоличестваШтук.Получить();
		КонецЕсли;
		НоменклатураОбъект.ЕдиницаИзмерения = ЕдиницаИзмерения;
		НоменклатураОбъект.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.РеализацияТоваровУслуг;
		Если ЭтоНабор Тогда
			НоменклатураОбъект.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Комплект кодов игр");
		Иначе
			НоменклатураОбъект.ВидНоменклатуры = Справочники.ВидыНоменклатуры.НайтиПоНаименованию("Игры");
		КонецЕсли;
		НоменклатураОбъект.ИспользованиеХарактеристик = Перечисления.ВариантыИспользованияХарактеристикНоменклатуры.НеИспользовать;
		НоменклатураОбъект.Качество = Перечисления.ГрадацииКачества.Новый;
		НоменклатураОбъект.СтавкаНДС = Перечисления.СтавкиНДС[Данные["СтавкаНДС"]];
		НоменклатураОбъект.ТипНоменклатуры = НоменклатураОбъект.ВидНоменклатуры.ТипНоменклатуры;
		НоменклатураОбъект.ЕдиницаДляОтчетов = ЕдиницаИзмерения;
		НоменклатураОбъект.КоэффициентЕдиницыДляОтчетов = 1;
		НоменклатураОбъект.ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.БезОсобенностейУчета;
		
		НоменклатураОбъект.Записать();
			
		// создание штрихкода
		Если НЕ Данные["Штрихкод"] = "" Тогда
			НаборЗаписей = РегистрыСведений.ШтрихкодыНоменклатуры.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Штрихкод.Установить(Данные["Штрихкод"]);
			Запись = НаборЗаписей.Добавить();
			Запись.Штрихкод = Данные["Штрихкод"];
			Запись.Номенклатура = Номенклатура;
			НаборЗаписей.Записать();
		КонецЕсли;	
		
		Возврат Истина;
		
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Функция СоздатьСоглашение(ВэбСервис, Аккаунт)
	
	Попытка
		
		ДанныеСтруктура = Новый Структура("Тип,ПолеПоиска,Значение", "Справочник.ДоговорыКонтрагентов", "Код", Аккаунт);
		Данные = ПолучитьОбъектИзДругойБазы(ВэбСервис, ДанныеСтруктура);
		
		Если НЕ Данные.Успех Тогда
			Возврат Ложь;
		КонецЕсли;
		
		Соглашение = Справочники.СоглашенияСКлиентами.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные["Ссылка"]));
		
		СоглашениеОбъект = Справочники.СоглашенияСКлиентами.СоздатьЭлемент();
		СоглашениеОбъект.УстановитьСсылкуНового(Соглашение);
		
		СоглашениеОбъект.Номер = Аккаунт;
		СоглашениеОбъект.Наименование = Данные["Наименование"];
		СоглашениеОбъект.Валюта = Справочники.Валюты.НайтиПоКоду(Данные["ВалютаВзаиморасчетовКод"]);
		
		СоглашениеОбъект.Организация 	= ПолучитьОрганизацию(ВэбСервис, Данные["Организация"]);
		СоглашениеОбъект.Контрагент 	= ПолучитьКонтрагента(ВэбСервис, Данные["Контрагент"]);
		СоглашениеОбъект.Партнер 		= ПолучитьПартнера	 (ВэбСервис, Данные["Партнер"]);
		СоглашениеОбъект.ВидЦен 		= ПолучитьВидЦен	 (ВэбСервис, Данные["ВидЦен"]);
		СоглашениеОбъект.Склад 			= ПолучитьСклад		 (ВэбСервис, Данные["Склад"]);
		
		СоглашениеОбъект.ЦенаВключаетНДС = СоглашениеОбъект.ВидЦен.ЦенаВключаетНДС;
		СоглашениеОбъект.Согласован = Истина;
		//СоглашениеОбъект.Статус = ?(СсылкаНаОбъект.Активный, Перечисления.СтатусыСоглашенийСКлиентами.Действует, Перечисления.СтатусыСоглашенийСКлиентами.Закрыт);
		СоглашениеОбъект.Статус = Перечисления.СтатусыСоглашенийСКлиентами.Действует; // если статус "Не действует", не создается реализация (ошибка заполнения на основании соглашения)
		СоглашениеОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.РеализацияКлиенту;
		СоглашениеОбъект.ПорядокОплаты = Перечисления.ПорядокОплатыПоСоглашениям.РасчетыВРубляхОплатаВРублях;
		СоглашениеОбъект.ПорядокРасчетов = Перечисления.ПорядокРасчетов.ПоДоговорамКонтрагентов;
		СоглашениеОбъект.ВалютаВзаиморасчетов = СоглашениеОбъект.Валюта;
		
		СоглашениеОбъект.Записать();
			
		Возврат Истина;
		
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

Функция ПолучитьОрганизацию(ВэбСервис, СсылкаНаОбъект)
	
	Организация = Справочники.Организации.ПолучитьСсылку(Новый УникальныйИдентификатор(СсылкаНаОбъект));
	
	Если Организация <> Справочники.Организации.ПустаяСсылка() И Организация.ПолучитьОбъект() = Неопределено Тогда
	
		ДанныеСтруктура = Новый Структура("Тип,ПолеПоиска,Значение", "Справочник.Организации", "Ссылка", СсылкаНаОбъект);
		Данные = ПолучитьОбъектИзДругойБазы(ВэбСервис, ДанныеСтруктура);
		
		ОрганизацияОбъект = Справочники.Организации.СоздатьЭлемент();
		ОрганизацияОбъект.УстановитьСсылкуНового(Организация);
		
		ОрганизацияОбъект.Наименование = Данные["Наименование"];
		ОрганизацияОбъект.ГоловнаяОрганизация = Организация;
		ОрганизацияОбъект.НаименованиеПолное = Данные["НаименованиеПолное"];
		ОрганизацияОбъект.НаименованиеСокращенное = Данные["Наименование"];
		ОрганизацияОбъект.ЮрФизЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
		ОрганизацияОбъект.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо;
		
		ОрганизацияОбъект.Записать();
		
	КонецЕсли;

	Возврат Организация;
	
КонецФункции

Функция ПолучитьКонтрагента(ВэбСервис, СсылкаНаОбъект)
	
	
КонецФункции

Функция ПолучитьПартнера(ВэбСервис, СсылкаНаОбъект)
	
	
КонецФункции

Функция ПолучитьВидЦен(ВэбСервис, СсылкаНаОбъект)
	
	
КонецФункции

Функция ПолучитьСклад(ВэбСервис, СсылкаНаОбъект)
	
	
КонецФункции
